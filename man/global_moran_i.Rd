% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/global_moran.R
\name{ww_global_moran_i}
\alias{ww_global_moran_i}
\alias{ww_global_moran_i_vec}
\alias{ww_global_moran_pvalue}
\alias{ww_global_moran_pvalue_vec}
\alias{ww_global_moran}
\title{Global Moran's I statistic}
\usage{
ww_global_moran_i(data, ...)

ww_global_moran_i_vec(truth, estimate, nb, wt, na_rm = TRUE, ...)

ww_global_moran_pvalue(data, ...)

ww_global_moran_pvalue_vec(
  truth,
  estimate,
  nb,
  wt,
  alternative,
  randomization,
  na_rm = TRUE,
  ...
)

ww_global_moran(
  data,
  truth,
  estimate,
  nb,
  wt,
  alternative = "greater",
  randomization = TRUE,
  na_rm = TRUE,
  ...
)
}
\arguments{
\item{data}{A \code{data.frame} containing the columns specified by the \code{truth}
and \code{estimate} arguments.}

\item{...}{Not currently used.}

\item{truth}{The column identifier for the true results
(that is \code{numeric}). This should be an unquoted column name although
this argument is passed by expression and supports
\link[rlang:topic-inject]{quasiquotation} (you can unquote column
names). For \verb{_vec()} functions, a \code{numeric} vector.}

\item{estimate}{The column identifier for the predicted
results (that is also \code{numeric}). As with \code{truth} this can be
specified different ways but the primary method is to use an
unquoted variable name. For \verb{_vec()} functions, a \code{numeric} vector.}

\item{nb}{a neighbor list object for example as created by \code{st_contiguity()}.}

\item{wt}{a weights list as created by \code{st_weights()}.}

\item{na_rm}{A \code{logical} value indicating whether \code{NA}
values should be stripped before the computation proceeds.}
}
\value{
A tibble with columns .metric, .estimator, and .estimate.
For grouped data frames, the number of rows returned will be the same as the number of groups times the number of metrics.
For ww_global_moran_i_vec(), a single numeric value (or NA).
}
\description{
Calculate the global Moran's I statistic for model residuals.
`ww_global_moran_i()` returns the statistic itself, while
`ww_global_moran_pvalue()` returns the associated p value.
`ww_global_moran()` returns both.
}
