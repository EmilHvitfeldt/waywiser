[{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to waywiser","title":"Contributing to waywiser","text":"outlines propose change waywiser. detailed info contributing , tidyverse packages, please see development contributing guide. package initially stable state development, great deal active subsequent development envisioned.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to waywiser","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to waywiser","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to waywiser","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"mikemahoney218/waywiser\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to waywiser","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to waywiser","text":"Please note waywiser project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 waywiser authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with waywiser","title":"Getting help with waywiser","text":"Thanks using waywiser! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with waywiser","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with waywiser","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with waywiser","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://mikemahoney218.github.io/waywiser/articles/Feature-Matrix.html","id":"feature-matrix","dir":"Articles","previous_headings":"","what":"Feature Matrix","title":"Feature Matrix","text":"table major statistical functions waywiser provides, alongside brief descriptions journal references . complete list package functions, check package reference page.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/articles/waywiser.html","id":"yardstick-extensions","dir":"Articles","previous_headings":"","what":"Yardstick Extensions","title":"Assessing Models with Waywiser","text":"First foremost, waywiser provides host new yardstick metrics provide standardized interface various performance metrics. functions work less way: provide data, names “true” values predicted values, get back standardized output format. usual yardstick, output can either tibble vector output. instance, want calculate agreement coefficient Ji Gallo 2006: additional metrics implemented wrapping functions spdep package: functions rely calculating spatial neighbors observation. waywiser package automatically use ww_build_weights() calculate , provided, often desirable. reason, functions wt argument, can take either pre-calculated weights function create spatial weights: yardstick metrics, can used yardstick::metric_set() tidymodels infrastructure:","code":"ww_agreement_coefficient(   worldclim_testing,   truth = response,   estimate = predictions ) #> # A tibble: 1 × 4 #>   .metric               .estimator .estimate                            geometry #>   <chr>                 <chr>          <dbl>                    <MULTIPOINT [°]> #> 1 agreement_coefficient standard       0.675 ((-42.42282 -18.98316), (-42.34674…  ww_agreement_coefficient_vec(   truth = worldclim_testing$response,   estimate = worldclim_testing$predictions ) #> [1] 0.6753398 ww_global_geary_c(   worldclim_testing,   truth = response,   estimate = predictions ) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 global_geary_c standard       0.166 ww_global_geary_c(   worldclim_testing,   truth = response,   estimate = predictions,   wt = ww_build_weights(worldclim_testing) ) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 global_geary_c standard       0.166  ww_global_geary_c(   worldclim_testing,   truth = response,   estimate = predictions,   wt = ww_build_weights ) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 global_geary_c standard       0.166 yardstick::metric_set(   ww_agreement_coefficient,   ww_global_geary_c )(worldclim_testing,   truth = response,   estimate = predictions) #> # A tibble: 2 × 4 #>   .metric               .estimator .estimate                            geometry #>   <chr>                 <chr>          <dbl>                    <MULTIPOINT [°]> #> 1 agreement_coefficient standard       0.675 ((-42.42282 -18.98316), (-42.34674… #> 2 global_geary_c        standard       0.166                               EMPTY"},{"path":"https://mikemahoney218.github.io/waywiser/articles/waywiser.html","id":"multi-scale-model-assessment","dir":"Articles","previous_headings":"","what":"Multi-scale model assessment","title":"Assessing Models with Waywiser","text":"common pattern spatial models need predict observation units – pixels raster individual points – aggregated arbitrary scales, towns parcel boundaries. errors can spatially distributed, can either compound counteract aggregated, assessment protocols recommend assessing model predictions aggregated multiple scales. ww_multi_scale() function helps automate process. interface function works similarly yardstick metrics – provide data, true values, estimate – except also must provide instructions aggregate data. can passing arguments used sf::st_make_grid(); instance, can use n argument control many polygons grid x y directions. Note element argument vector used make separate grid – , instance, passing n = c(2, 4) result one 2--2 grid one 4--4 grid, n[[1]] 2 n[[2]] 4. actually wanted create 2--4 grid, passing sf::st_make_grid() argument n = c(2, 4), need wrap vector list running n[[1]] returns c(2, 4): can also pass polygons directly, pre-defined grids ’d like use:","code":"ww_multi_scale(   worldclim_testing,   truth = response,   estimate = predictions,   metrics = list(ww_agreement_coefficient, yardstick::rmse),   n = list(c(2, 4)) ) #> # A tibble: 2 × 6 #>   .metric               .estimator .estimate .grid_args       .grid  .notes   #>   <chr>                 <chr>          <dbl> <list>           <list> <list>   #> 1 agreement_coefficient standard      0.202  <tibble [1 × 1]> <sf>   <tibble> #> 2 rmse                  standard      0.0391 <tibble [1 × 1]> <sf>   <tibble> grid <- sf::st_make_grid(worldclim_testing, n = c(2, 4)) ww_multi_scale(   worldclim_testing,   truth = response,   estimate = predictions,   metrics = list(ww_agreement_coefficient, yardstick::rmse),   grids = list(grid) ) #> Warning: Some observations were not within any grid cell, and as such were not used in any assessments. #> ℹ See the `.notes` column for details. #> # A tibble: 2 × 6 #>   .metric               .estimator .estimate .grid_args       .grid  .notes   #>   <chr>                 <chr>          <dbl> <list>           <list> <list>   #> 1 agreement_coefficient standard      0.150  <tibble [0 × 0]> <sf>   <tibble> #> 2 rmse                  standard      0.0418 <tibble [0 × 0]> <sf>   <tibble>"},{"path":"https://mikemahoney218.github.io/waywiser/articles/waywiser.html","id":"area-of-applicability","dir":"Articles","previous_headings":"","what":"Area of Applicability","title":"Assessing Models with Waywiser","text":"Last least, can also see ’s areas data different training data us safely predict , fall outside “area applicability” defined Meyer Pebesma (2021). approach looks similar predictor values new data data used train data, predictor weighted important model. order calculate area applicability, can pass ww_area_of_applicability() information variables used predictors model, training data, importance scores variables. box, waywiser work importance score-calculating functions vip package: can also pass data.frame columns named “term” “estimate” (containing name term, predictor, estimated importance) rather using vip package ’s convenient. objects returned ww_area_of_applicability() models right, can used functions predict() calculate new observations area applicability model. predict function returns “distance index”, “di”, observation: score far away observation , predictor space, training data. Points “di” higher set threshold “outside” area applicability. can visualize test set see model often, always, performs worse observations higher “di”:","code":"worldclim_aoa <- ww_area_of_applicability(   response ~ bio2 + bio10 + bio13 + bio19,   worldclim_training,   importance = vip::vi_model(worldclim_model) )  worldclim_aoa #> # Predictors: #>    4 #> Area-of-applicability threshold: #>    0.1038107 worldclim_testing <- cbind(   worldclim_testing,   predict(worldclim_aoa, worldclim_testing) )  head(worldclim_testing) #> Simple feature collection with 6 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -156.2436 ymin: 3.924933 xmax: 52.85843 ymax: 48.72934 #> CRS:           +proj=longlat +datum=WGS84 +no_defs #>      bio2 bio10 bio13 bio19   response predictions         di  aoa #> 8001  150   256    12    32 0.65981755  0.60203146 0.03315007 TRUE #> 8002   85   248    82   196 0.30859908  0.30053636 0.08787721 TRUE #> 8003  178   275    56    33 0.47365646  0.65660673 0.04132990 TRUE #> 8004  100   200    74    99 0.47266462  0.39658926 0.04877910 TRUE #> 8005   68   262   296   746 0.00863417 -0.01075431 0.00000000 TRUE #> 8006  112   241    21    48 0.63255439  0.46702575 0.00000000 TRUE #>                        geometry #> 8001   POINT (36.1216 30.23658) #> 8002 POINT (-156.2436 19.73569) #> 8003 POINT (-103.2796 31.85488) #> 8004  POINT (20.64971 47.14207) #> 8005 POINT (-81.33804 3.924933) #> 8006  POINT (52.85843 48.72934) library(ggplot2)  ggplot(worldclim_testing, aes(di, abs(response - predictions), color = aoa)) +    geom_point(alpha = 0.6)"},{"path":"https://mikemahoney218.github.io/waywiser/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Mahoney. Author, maintainer. Lucas Johnson. Contributor. . Copyright holder, funder.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mahoney M (????). waywiser: Ergonomic Methods Assessing Spatial Models. R package version 0.2.0.9000, https://CRAN.R-project.org/package=waywiser.","code":"@Manual{,   title = {{waywiser}: Ergonomic Methods for Assessing Spatial Models},   author = {Michael Mahoney},   note = {R package version 0.2.0.9000},   url = {https://CRAN.R-project.org/package=waywiser}, }"},{"path":"https://mikemahoney218.github.io/waywiser/index.html","id":"waywiser-","dir":"","previous_headings":"","what":"Ergonomic Methods for Assessing Spatial Models","title":"Ergonomic Methods for Assessing Spatial Models","text":"“Waywiser” old-timey name surveyor’s wheel, device makes measuring long distances easier measurement tools like ruler yardstick. waywiser R package makes easier measure performance models fit 2D spatial data implementing number well-established assessment methods consistent, ergonomic toolbox; features include new yardstick metrics measuring agreement spatial autocorrelation, functions assess model predictions across multiple scales, methods calculate area applicability model.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ergonomic Methods for Assessing Spatial Models","text":"can install waywiser CRAN via: can install development version waywiser GitHub :","code":"install.packages(\"waywiser\") # install.packages(\"devtools\") remotes::install_github(\"mikemahoney218/waywiser\")"},{"path":"https://mikemahoney218.github.io/waywiser/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Ergonomic Methods for Assessing Spatial Models","text":"Let’s say fit linear model predicting crimes people function literacy, using guerry data included waywiser: want assess model, better understand well predicts crime rates across 1830s France. One method evaluate predictions multiple levels aggregation, suggested Riemann et al. (2010) (<doi: 10.1016/j.rse.2010.05.010>). approach focused aggregating point predictions, ’ll convert data points see well predictions perform aggregated two different scales: information multi-scale assessment included vignette(\"multi-scale-assessment\", package = \"waywiser\"). also assess spatial dependence model residuals, identify potential “hot spots” model consistently less accurate ’d expect chance: information multi-scale assessment included vignette(\"residual-autocorrelation\", package = \"waywiser\"). Lastly, can also see ’s areas data different training data us safely predict , fall outside “area applicability” defined Meyer Pebesma (2021) (<doi: 10.1111/2041-210X.13650>):  can see two areas outside model’s area applicability, meaning probably can’t trust model extrapolating regions! information, check documentation website!","code":"library(waywiser)  set.seed(123) split_idx <- sample(seq_len(nrow(guerry)), nrow(guerry) * 0.8) guerry_train <- guerry[split_idx, ] guerry_test <- guerry[-split_idx, ]  crime_model <- lm(Crm_prs ~ Litercy, guerry_train) guerry_points <- data.frame(   .truth = guerry$Crm_prs,   .estimate = predict(crime_model, guerry),   geometry = sf::st_centroid(sf::st_geometry(guerry)) ) guerry_points <- sf::st_as_sf(guerry_points)  guerry_multi_scale <- ww_multi_scale(   guerry_points,   .truth,   .estimate,   n = list(c(5, 5), c(2, 2)) )  guerry_multi_scale #> # A tibble: 4 × 6 #>   .metric .estimator .estimate .grid_args       .grid         .notes           #>   <chr>   <chr>          <dbl> <list>           <list>        <list>           #> 1 rmse    standard       4893. <tibble [1 × 1]> <sf [25 × 3]> <tibble [0 × 2]> #> 2 mae     standard       4393. <tibble [1 × 1]> <sf [25 × 3]> <tibble [0 × 2]> #> 3 rmse    standard       3207. <tibble [1 × 1]> <sf [4 × 3]>  <tibble [0 × 2]> #> 4 mae     standard       3172. <tibble [1 × 1]> <sf [4 × 3]>  <tibble [0 × 2]> guerry_predicted <- guerry guerry_predicted$predictions <- predict(crime_model, guerry)  ww_local_moran_i(guerry_predicted, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric       .estimator .estimate #>    <chr>         <chr>          <dbl> #>  1 local_moran_i standard      0.548  #>  2 local_moran_i standard      0.943  #>  3 local_moran_i standard      0.636  #>  4 local_moran_i standard      0.700  #>  5 local_moran_i standard      0.137  #>  6 local_moran_i standard      0.917  #>  7 local_moran_i standard      0.900  #>  8 local_moran_i standard      1.79   #>  9 local_moran_i standard      0.0208 #> 10 local_moran_i standard      0.750  #> # … with 75 more rows crime_model_aoa <- ww_area_of_applicability(   Crm_prs ~ Litercy,   guerry_train,   guerry_test,   importance = vip::vi_model(crime_model) ) #> Warning: The AOA threshold was 0, which is usually unexpected.  guerry_aoa <- cbind(   guerry,   predict(crime_model_aoa, guerry) )  plot(guerry_aoa[\"aoa\"]) #> Warning in seq.default(0.5 * cutoff.tails[1], 1 - 0.5 * cutoff.tails[2], : #> partial argument match of 'length' to 'length.out' #> Warning in plot.default(1, 1, t = \"n\", ylim = ylim, xlim = xlim, axes = FALSE, : #> partial argument match of 't' to 'type'"},{"path":"https://mikemahoney218.github.io/waywiser/index.html","id":"citing-waywiser","dir":"","previous_headings":"","what":"Citing waywiser","title":"Ergonomic Methods for Assessing Spatial Models","text":"cite waywiser publications please use: Mahoney, M. J. (2022). waywiser: Ergonomic Methods Assessing Spatial Models. R package version 0.2.0, https://CRAN.R-project.org/package=waywiser. BibTeX entry LaTeX users ","code":"@Manual{,     title = {{waywiser}: Ergonomic Methods for Assessing Spatial Models},     author = {Michael Mahoney},     year = 2022,     note = {R package version 0.2.0},     url = {https://CRAN.R-project.org/package=waywiser},   }"},{"path":"https://mikemahoney218.github.io/waywiser/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Ergonomic Methods for Assessing Spatial Models","text":"project released Contributor Code Conduct. contributing project, agree abide terms. think encountered bug, please submit issue. Please include reprex (minimal, reproducible example) clearly communicate code.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Geary's C statistic — ww_global_geary_c","title":"Global Geary's C statistic — ww_global_geary_c","text":"Calculate global Geary's C statistic model residuals. ww_global_geary_c() returns statistic , ww_global_geary_pvalue() returns associated p value. functions meant help assess model predictions, instance identifying clusters higher residuals expected. statistical testing inference applications, use spdep::geary.test() instead.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Geary's C statistic — ww_global_geary_c","text":"","code":"ww_global_geary_c(data, ...)  ww_global_geary_c_vec(truth, estimate, wt, na_action = na.fail, ...)  ww_global_geary_pvalue(data, ...)  ww_global_geary_pvalue_vec(   truth,   estimate,   wt = NULL,   na_action = na.fail,   ... )"},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Geary's C statistic — ww_global_geary_c","text":"data data.frame containing columns specified truth estimate arguments. ... Additional arguments passed spdep::geary() (ww_global_geary_c()) spdep::geary.test() (ww_global_geary_pvalue()). truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. wt listw object, instance created ww_build_weights(). data.frame input, may also function takes data returns listw object. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Geary's C statistic — ww_global_geary_c","text":"tibble columns .metric, .estimator, .estimate 1 row values. grouped data frames, number rows returned number groups. _vec() functions, single value (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Geary's C statistic — ww_global_geary_c","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Geary's C statistic — ww_global_geary_c","text":"Geary, R. C. (1954). \"Contiguity Ratio Statistical Mapping\". Incorporated Statistician. 5 (3): 115–145. doi:10.2307/2986645. Cliff, . D., Ord, J. K. 1981 Spatial processes, Pion, p. 17.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_geary_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Geary's C statistic — ww_global_geary_c","text":"","code":"guerry_model <- guerry guerry_lm <- lm(Crm_prs ~ Litercy, guerry_model) guerry_model$predictions <- predict(guerry_lm, guerry_model)  ww_global_geary_c(guerry_model, Crm_prs, predictions) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 global_geary_c standard       0.565 ww_global_geary_pvalue(guerry_model, Crm_prs, predictions) #> # A tibble: 1 × 3 #>   .metric             .estimator .estimate #>   <chr>               <chr>          <dbl> #> 1 global_geary_pvalue standard    7.55e-10  wt <- ww_build_weights(guerry_model)  ww_global_geary_c_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #> [1] 0.5654044 ww_global_geary_pvalue_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #> [1] 7.548865e-10"},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Moran's I statistic — ww_global_moran_i","title":"Global Moran's I statistic — ww_global_moran_i","text":"Calculate global Moran's statistic model residuals. ww_global_moran_i() returns statistic , ww_global_moran_pvalue() returns associated p value. functions meant help assess model predictions, instance identifying clusters higher residuals expected. statistical testing inference applications, use spdep::moran.test() instead.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Moran's I statistic — ww_global_moran_i","text":"","code":"ww_global_moran_i(data, ...)  ww_global_moran_i_vec(truth, estimate, wt = NULL, na_action = na.fail, ...)  ww_global_moran_pvalue(data, ...)  ww_global_moran_pvalue_vec(   truth,   estimate,   wt = NULL,   na_action = na.fail,   ... )"},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Moran's I statistic — ww_global_moran_i","text":"data data.frame containing columns specified truth estimate arguments. ... Additional arguments passed spdep::moran() (ww_global_moran_i()) spdep::moran.test() (ww_global_moran_pvalue()). truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. wt listw object, instance created ww_build_weights(). data.frame input, may also function takes data returns listw object. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global Moran's I statistic — ww_global_moran_i","text":"tibble columns .metric, .estimator, .estimate 1 row values. grouped data frames, number rows returned number groups. _vec() functions, single value (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Moran's I statistic — ww_global_moran_i","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global Moran's I statistic — ww_global_moran_i","text":"Moran, P..P. (1950). \"Notes Continuous Stochastic Phenomena.\" Biometrika, 37(1/2), pp 17. doi: 10.2307/2332142 Cliff, . D., Ord, J. K. 1981 Spatial processes, Pion, p. 17.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/global_moran_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Moran's I statistic — ww_global_moran_i","text":"","code":"guerry_model <- guerry guerry_lm <- lm(Crm_prs ~ Litercy, guerry_model) guerry_model$predictions <- predict(guerry_lm, guerry_model)  ww_global_moran_i(guerry_model, Crm_prs, predictions) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 global_moran_i standard       0.412 ww_global_moran_pvalue(guerry_model, Crm_prs, predictions) #> # A tibble: 1 × 3 #>   .metric             .estimator .estimate #>   <chr>               <chr>          <dbl> #> 1 global_moran_pvalue standard    7.23e-10  wt <- ww_build_weights(guerry_model)  ww_global_moran_i_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #> [1] 0.4115652 ww_global_moran_pvalue_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #> [1] 7.234758e-10"},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":null,"dir":"Reference","previous_headings":"","what":"Guerry ","title":"Guerry ","text":"data description taken geodaData R package. Classic social science foundational study Andre-Michel Guerry crime, suicide, literacy “moral statistics” 1830s France. Data R package Guerry (Michael Friendly Stephane Dray).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guerry ","text":"","code":"guerry"},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Guerry ","text":"sf data frame 85 rows, 23 variables, geometry column: dept Department ID: Standard numbers departments Region Region France ('N'='North', 'S'='South', 'E'='East', 'W'='West', 'C'='Central').  Corsica coded NA. Dprtmnt Department name: Departments named according usage 1830, without accents. factor levels Ain Aisne Allier ... Vosges Yonne Crm_prs Population per Crime persons. Crm_prp Population per Crime property. Litercy Percent military conscripts can read write. Donatns Donations poor. Infants Population per illegitimate birth. Suicids Population per suicide. Maincty Size principal city ('1:Sm', '2:Med', '3:Lg'), used surrogate population density. Large refers top 10, small bottom 10; rest classed Medium. Wealth Per capita tax personal property. ranked index based taxes personal movable property per inhabitant. Commerc Commerce Industry, measured rank number patents / population. Clergy Distribution clergy, measured rank number Catholic priests active service population. Crim_prn Crimes parents, measured rank ratio crimes parents crimes – Average years 1825-1830. Infntcd Infanticides per capita. ranked ratio number infanticides population – Average years 1825-1830. Dntn_cl Donations clergy. ranked ratio number bequests donations inter vivios population – Average years 1815-1824. Lottery Per capita wager Royal Lottery. Ranked ratio proceeds bet royal lottery population — Average years 1822-1826. Desertn Military desertion, ratio number young soldiers accused desertion force military contingent, minus deficit produced insufficiency available billets – Average years 1825-1827. Instrct Instruction. Ranks recorded Guerry's map Instruction. Note: inversely related Literacy Prsttts Number prostitutes registered Paris 1816 1834, classified department birth Distanc Distance Paris (km). Distance department centroid centroid Seine (Paris) Area Area (1000 km^2). Pop1831 Population 1831, 1000s","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Guerry ","text":"Angeville, . (1836). Essai sur la Statistique de la Population française Paris: F. Doufour. Guerry, .-M. (1833). Essai sur la statistique morale de la France Paris: Crochard. English translation: Hugh P. Whitt Victor W. Reinking, Lewiston, N.Y. : Edwin Mellen Press, 2002. Parent-Duchatelet, . (1836). De la prostitution dans la ville de Paris, 3rd ed, 1857, p. 32, 36 https://geodacenter.github.io/data--lab/Guerry/","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Guerry ","text":"Sf object, units m. EPSG 27572: NTF (Paris) / Lambert zone II.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/guerry.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guerry ","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(guerry)    plot(guerry[\"Donatns\"]) } #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Geary's C statistic — ww_local_geary_c","title":"Local Geary's C statistic — ww_local_geary_c","text":"Calculate local Geary's C statistic model residuals. ww_local_geary_c() returns statistic , ww_local_geary_pvalue() returns associated p value. functions meant help assess model predictions, instance identifying clusters higher residuals expected. statistical testing inference applications, use spdep::localC_perm() instead.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Geary's C statistic — ww_local_geary_c","text":"","code":"ww_local_geary_c(data, ...)  ww_local_geary_c_vec(truth, estimate, wt, na_action = na.fail, ...)  ww_local_geary_pvalue(data, ...)  ww_local_geary_pvalue_vec(truth, estimate, wt = NULL, na_action = na.fail, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local Geary's C statistic — ww_local_geary_c","text":"data data.frame containing columns specified truth estimate arguments. ... Additional arguments passed spdep::localC() (ww_local_geary_c()) spdep::localC_perm() (ww_local_geary_pvalue()). truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. wt listw object, instance created ww_build_weights(). data.frame input, may also function takes data returns listw object. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local Geary's C statistic — ww_local_geary_c","text":"tibble columns .metric, .estimator, .estimate nrow(data) rows values. _vec() functions, numeric vector length(truth) (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local Geary's C statistic — ww_local_geary_c","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local Geary's C statistic — ww_local_geary_c","text":"Anselin, L. 1995. Local indicators spatial association, Geographical Analysis, 27, pp 93–115. doi: 10.1111/j.1538-4632.1995.tb00338.x. Anselin, L. 2019. Local Indicator Multivariate Spatial Association: Extending Geary's C. Geographical Analysis, 51, pp 133-150. doi: 10.1111/gean.12164","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_geary_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local Geary's C statistic — ww_local_geary_c","text":"","code":"guerry_model <- guerry guerry_lm <- lm(Crm_prs ~ Litercy, guerry_model) guerry_model$predictions <- predict(guerry_lm, guerry_model)  ww_local_geary_c(guerry_model, Crm_prs, predictions) #> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in #> dplyr 1.1.0. #> ℹ Please use `reframe()` instead. #> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()` #>   always returns an ungrouped data frame and adjust accordingly. #> ℹ The deprecated feature was likely used in the yardstick package. #>   Please report the issue at <https://github.com/tidymodels/yardstick/issues>. #> # A tibble: 85 × 3 #>    .metric       .estimator .estimate #>    <chr>         <chr>          <dbl> #>  1 local_geary_c standard       0.981 #>  2 local_geary_c standard       0.836 #>  3 local_geary_c standard       0.707 #>  4 local_geary_c standard       0.108 #>  5 local_geary_c standard       0.264 #>  6 local_geary_c standard       1.36  #>  7 local_geary_c standard       3.64  #>  8 local_geary_c standard       1.57  #>  9 local_geary_c standard       0.867 #> 10 local_geary_c standard       0.737 #> # … with 75 more rows ww_local_geary_pvalue(guerry_model, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric            .estimator .estimate #>    <chr>              <chr>          <dbl> #>  1 local_geary_pvalue standard       0.207 #>  2 local_geary_pvalue standard       0.259 #>  3 local_geary_pvalue standard       0.159 #>  4 local_geary_pvalue standard       0.134 #>  5 local_geary_pvalue standard       0.284 #>  6 local_geary_pvalue standard       0.159 #>  7 local_geary_pvalue standard       0.443 #>  8 local_geary_pvalue standard       0.164 #>  9 local_geary_pvalue standard       0.783 #> 10 local_geary_pvalue standard       0.446 #> # … with 75 more rows  wt <- ww_build_weights(guerry_model)  ww_local_geary_c_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>  [1] 0.981119438 0.836402177 0.707464373 0.108332465 0.264075824 1.361485477 #>  [7] 3.641239412 1.571824022 0.867252524 0.737094462 0.573376555 0.001605731 #> [13] 1.891988440 1.152840284 1.029320931 0.297642850 1.219953394 1.934113868 #> [19] 1.632566652 0.441916658 5.202733790 0.921953310 3.084515822 0.237218594 #> [25] 1.346684045 1.051652204 0.419414691 0.217280214 0.794409207 0.243971372 #> [31] 0.376678958 0.139152907 0.711305633 3.096840680 1.974463944 0.922230710 #> [37] 1.032031759 0.339464386 0.933794842 1.910440700 0.937597672 0.625628647 #> [43] 0.376707677 2.692250283 1.288784962 0.798443065 1.671895951 1.310183326 #> [49] 2.347513577 0.845204889 0.302940809 2.291804447 0.881999216 0.412051312 #> [55] 2.006031605 0.561239582 0.375776092 1.853716391 1.191472387 1.146802970 #> [61] 1.857618679 0.149044974 0.614228825 0.755373475 1.287962784 1.447534518 #> [67] 1.236607966 0.962394651 0.338400653 1.914478855 0.641340157 2.146993342 #> [73] 0.703881855 1.417638272 0.692636715 1.765618175 0.246058853 0.700262130 #> [79] 0.002876896 0.057575267 0.420878038 2.025012395 2.525093274 1.053335832 #> [85] 1.030009749 ww_local_geary_pvalue_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>  [1] 0.18904248 0.22046501 0.18398893 0.11214775 0.29826279 0.15190811 #>  [7] 0.43993555 0.16339218 0.78647329 0.43402713 0.02011737 0.16626856 #> [13] 0.28301553 0.91215907 0.53761422 0.17279004 0.74713119 0.58717383 #> [19] 0.09280984 0.17816890 0.50881366 0.73912158 0.65457989 0.12369744 #> [25] 0.88050224 0.97825910 0.21315173 0.08240886 0.62563957 0.14927360 #> [31] 0.16729551 0.13975825 0.41368435 0.56269553 0.07450678 0.79822829 #> [37] 0.39255004 0.28765980 0.79949105 0.83474279 0.65243406 0.56673133 #> [43] 0.17954093 0.20477114 0.80363564 0.06247550 0.25489531 0.18043862 #> [49] 0.15667777 0.18884807 0.04231823 0.75856765 0.43645623 0.26466664 #> [55] 0.99050114 0.16366210 0.18784964 0.63131308 0.24753965 0.99157032 #> [61] 0.29503309 0.23773132 0.29902705 0.21059268 0.51234585 0.31865387 #> [67] 0.72717802 0.75148142 0.01819353 0.09139179 0.53690549 0.17941448 #> [73] 0.35138704 0.58539378 0.56309639 0.07775559 0.09279701 0.32450004 #> [79] 0.18423160 0.06158892 0.31659937 0.48867591 0.06390712 0.92995134 #> [85] 0.94403518"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"Calculate local Getis-Ord G G* statistic model residuals. ww_local_getis_ord_g() returns statistic , ww_local_getis_ord_pvalue() returns associated p value. functions meant help assess model predictions, instance identifying clusters higher residuals expected. statistical testing inference applications, use spdep::localG_perm() instead.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"","code":"ww_local_getis_ord_g(data, ...)  ww_local_getis_ord_g_vec(truth, estimate, wt, na_action = na.fail, ...)  ww_local_getis_ord_g_pvalue(data, ...)  ww_local_getis_ord_g_pvalue_vec(truth, estimate, wt, na_action = na.fail, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"data data.frame containing columns specified truth estimate arguments. ... Additional arguments passed spdep::localG() (ww_local_getis_ord_g()) spdep::localG_perm() (ww_local_getis_ord_pvalue()). truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. wt listw object, instance created ww_build_weights(). data.frame input, may also function takes data returns listw object. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"tibble columns .metric, .estimator, .estimate nrow(data) rows values. _vec() functions, numeric vector length(truth) (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"Ord, J. K. Getis, . 1995. Local spatial autocorrelation statistics: distributional issues application. Geographical Analysis, 27, 286–306. doi: 10.1111/j.1538-4632.1995.tb00912.x","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_getis_ord_g.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local Getis-Ord G and G* statistic — ww_local_getis_ord_g","text":"","code":"guerry_model <- guerry guerry_lm <- lm(Crm_prs ~ Litercy, guerry_model) guerry_model$predictions <- predict(guerry_lm, guerry_model)  ww_local_getis_ord_g(guerry_model, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric           .estimator .estimate #>    <chr>             <chr>          <dbl> #>  1 local_getis_ord_g standard       0.913 #>  2 local_getis_ord_g standard       2.49  #>  3 local_getis_ord_g standard       2.15  #>  4 local_getis_ord_g standard      -1.58  #>  5 local_getis_ord_g standard      -1.19  #>  6 local_getis_ord_g standard      -1.68  #>  7 local_getis_ord_g standard       0.627 #>  8 local_getis_ord_g standard      -1.60  #>  9 local_getis_ord_g standard       0.964 #> 10 local_getis_ord_g standard      -2.71  #> # … with 75 more rows ww_local_getis_ord_g_pvalue(guerry_model, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric                  .estimator .estimate #>    <chr>                    <chr>          <dbl> #>  1 local_getis_ord_g_pvalue standard     0.378   #>  2 local_getis_ord_g_pvalue standard     0.0142  #>  3 local_getis_ord_g_pvalue standard     0.0416  #>  4 local_getis_ord_g_pvalue standard     0.127   #>  5 local_getis_ord_g_pvalue standard     0.269   #>  6 local_getis_ord_g_pvalue standard     0.109   #>  7 local_getis_ord_g_pvalue standard     0.545   #>  8 local_getis_ord_g_pvalue standard     0.120   #>  9 local_getis_ord_g_pvalue standard     0.361   #> 10 local_getis_ord_g_pvalue standard     0.00465 #> # … with 75 more rows  wt <- ww_build_weights(guerry_model)  ww_local_getis_ord_g_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>  [1]  0.91288164  2.49305353  2.14692501 -1.57511235 -1.18988831 -1.67703329 #>  [7]  0.62706195 -1.60139345  0.96397088 -2.71475331 -3.05125861 -1.64429475 #> [13]  1.15584938 -2.90161984 -0.63376101  0.61005430  2.29888368 -0.28799789 #> [19]  1.53012357  1.22699107  0.59816133 -0.65331166  0.87501663 -1.75661589 #> [25]  0.39100454  0.52017062  1.16424138 -3.20781683 -2.29583912 -0.98116177 #> [31]  0.06685550 -2.13635236  2.30311768  0.63548278  1.99855789 -0.24366435 #> [37]  1.55058791  0.17231008  1.52062197 -0.22999799 -1.29501163  1.08298736 #> [43]  0.13063616 -1.21798455 -1.00549332 -2.29306942  0.89419782  1.19832028 #> [49]  2.03154442  0.87398122  2.88484032 -0.76194353  1.52453019  1.36764146 #> [55] -0.06618369  1.47010332  1.89277905  0.52529402  1.63007385  2.00852739 #> [61]  1.14763247 -0.91644996 -0.49669001 -1.85515687 -1.00553207 -0.86081555 #> [67]  1.63219209  1.04953518  2.51838763  1.71259713 -0.49967695  1.35387348 #> [73] -0.33336379 -0.07498653  0.56058846  1.54116260 -1.91772217 -1.92601432 #> [79] -1.62505600 -2.60384397  0.42262985  1.16021704  1.46229964  0.06056077 #> [85]  1.08651166 ww_local_getis_ord_g_pvalue_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>  [1] 0.400591174 0.021825950 0.042953492 0.122131488 0.287835491 0.116560210 #>  [7] 0.547472011 0.117632654 0.430334690 0.011446546 0.003032682 0.116685660 #> [13] 0.275182659 0.009220233 0.536344089 0.496722169 0.017254809 0.816975570 #> [19] 0.176352298 0.192728513 0.597869289 0.516698936 0.339387772 0.081401193 #> [25] 0.716035983 0.634778047 0.261050788 0.001912601 0.023861079 0.332248084 #> [31] 0.893134766 0.030824096 0.027366142 0.566159620 0.060015105 0.834132630 #> [37] 0.134406159 0.900160025 0.132703659 0.792144495 0.204706586 0.290582889 #> [43] 0.895064618 0.260591482 0.360368820 0.021041479 0.416798905 0.227036151 #> [49] 0.045052553 0.350279042 0.005416325 0.428399095 0.170167133 0.209020087 #> [55] 0.959643343 0.154816552 0.065420972 0.669231709 0.141233372 0.050254018 #> [61] 0.231944239 0.333117030 0.583897349 0.057279172 0.300099416 0.374707392 #> [67] 0.123127683 0.272053158 0.014369493 0.116188871 0.663748298 0.191277890 #> [73] 0.727885634 0.996406915 0.582052820 0.135469308 0.067485794 0.052625036 #> [79] 0.096735678 0.006563878 0.684996587 0.270617425 0.161863934 0.892646955 #> [85] 0.252488984"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Moran's I statistic — ww_local_moran_i","title":"Local Moran's I statistic — ww_local_moran_i","text":"Calculate local Moran's statistic model residuals. ww_local_moran_i() returns statistic , ww_local_moran_pvalue() returns associated p value. functions meant help assess model predictions, instance identifying clusters higher residuals expected. statistical testing inference applications, use spdep::localmoran_perm() instead.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Moran's I statistic — ww_local_moran_i","text":"","code":"ww_local_moran_i(data, ...)  ww_local_moran_i_vec(truth, estimate, wt, na_action = na.fail, ...)  ww_local_moran_pvalue(data, ...)  ww_local_moran_pvalue_vec(truth, estimate, wt = NULL, na_action = na.fail, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local Moran's I statistic — ww_local_moran_i","text":"data data.frame containing columns specified truth estimate arguments. ... Additional arguments passed spdep::localmoran(). truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. wt listw object, instance created ww_build_weights(). data.frame input, may also function takes data returns listw object. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local Moran's I statistic — ww_local_moran_i","text":"tibble columns .metric, .estimator, .estimate nrow(data) rows values. _vec() functions, numeric vector length(truth) (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local Moran's I statistic — ww_local_moran_i","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local Moran's I statistic — ww_local_moran_i","text":"Anselin, L. 1995. Local indicators spatial association, Geographical Analysis, 27, pp 93–115. doi: 10.1111/j.1538-4632.1995.tb00338.x. Sokal, R. R, Oden, N. L. Thomson, B. . 1998. Local Spatial Autocorrelation Biological Model. Geographical Analysis, 30, pp 331–354. doi: 10.1111/j.1538-4632.1998.tb00406.x","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/local_moran_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local Moran's I statistic — ww_local_moran_i","text":"","code":"guerry_model <- guerry guerry_lm <- lm(Crm_prs ~ Litercy, guerry_model) guerry_model$predictions <- predict(guerry_lm, guerry_model)  ww_local_moran_i(guerry_model, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric       .estimator .estimate #>    <chr>         <chr>          <dbl> #>  1 local_moran_i standard      0.530  #>  2 local_moran_i standard      0.858  #>  3 local_moran_i standard      0.759  #>  4 local_moran_i standard      0.732  #>  5 local_moran_i standard      0.207  #>  6 local_moran_i standard      0.860  #>  7 local_moran_i standard      0.692  #>  8 local_moran_i standard      1.69   #>  9 local_moran_i standard     -0.0109 #> 10 local_moran_i standard      0.710  #> # … with 75 more rows ww_local_moran_pvalue(guerry_model, Crm_prs, predictions) #> # A tibble: 85 × 3 #>    .metric            .estimator .estimate #>    <chr>              <chr>          <dbl> #>  1 local_moran_pvalue standard     0.361   #>  2 local_moran_pvalue standard     0.0127  #>  3 local_moran_pvalue standard     0.0318  #>  4 local_moran_pvalue standard     0.115   #>  5 local_moran_pvalue standard     0.234   #>  6 local_moran_pvalue standard     0.0935  #>  7 local_moran_pvalue standard     0.531   #>  8 local_moran_pvalue standard     0.109   #>  9 local_moran_pvalue standard     0.335   #> 10 local_moran_pvalue standard     0.00663 #> # … with 75 more rows  wt <- ww_build_weights(guerry_model)  ww_local_moran_i_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>            1            2            3            4            5            6  #>  0.529586027  0.857962397  0.759397482  0.731821184  0.207216255  0.859824645  #>            7            8            9           10           11           12  #>  0.692480894  1.685682868 -0.010937577  0.709971045  1.756476080  0.839390997  #>           13           14           15           16           17           18  #> -0.208812822  0.311287253 -0.195850256 -0.046485425  0.219659575  0.072248473  #>           19           20           21           22           23           24  #>  0.911260991  0.796818074  0.472218810 -0.047995949 -0.701165391  0.682001844  #>           25           26           27           28           29           30  #> -0.114131742  0.043283334  1.067791069  1.186850176  0.174554949  0.071132504  #>           31           32           33           34           35           36  #>  0.014932487  1.014614517  0.258635858  0.385988835 -0.113213840  0.016531123  #>           37           38           39           40           41           42  #>  0.601974328 -0.029051514  0.101963855 -0.098393898  0.305211136 -0.057462330  #>           43           44           45           46           47           48  #> -0.015702560  0.882089292 -0.163892577  1.649695545  0.377330987  0.868476489  #>           49           50           51           52           53           54  #> -0.465975751  0.303084203  1.404344537 -0.370062874  0.440556284  0.289554503  #>           55           56           57           58           59           60  #>  0.035787495  0.393521099  1.006384006  0.222959827  0.730981130  0.628215009  #>           61           62           63           64           65           66  #> -0.183012992  0.227295946  0.284153229  2.316505472  0.494418600  0.982994320  #>           67           68           69           70           71           72  #> -0.124397352  0.160297076  1.039537767  1.231583113  0.271055716 -0.168894660  #>           73           74           75           76           77           78  #> -0.038283576  0.017831736 -0.052920056  1.205308932  0.808428811  0.551329387  #>           79           80           81           82           83           84  #>  0.878044848  0.901458850  0.022009901 -0.327876773 -0.318368758 -0.003280457  #>           85  #> -0.124796245  ww_local_moran_pvalue_vec(   guerry_model$Crm_prs,   guerry_model$predictions,   wt = wt ) #>           1           2           3           4           5           6  #> 0.361304795 0.012664975 0.031799252 0.115230513 0.234090293 0.093535973  #>           7           8           9          10          11          12  #> 0.530618631 0.109289803 0.335060524 0.006632515 0.002278842 0.100115333  #>          13          14          15          16          17          18  #> 0.247742772 0.003712388 0.526236804 0.541825841 0.021511546 0.773348351  #>          19          20          21          22          23          24  #> 0.125986145 0.219825946 0.549732292 0.513555378 0.381564858 0.078983302  #>          25          26          27          28          29          30  #> 0.695793884 0.602944660 0.244326204 0.001337467 0.021685082 0.326512972  #>          31          32          33          34          35          36  #> 0.946696741 0.032650704 0.021272223 0.525113591 0.045656211 0.807490784  #>          37          38          39          40          41          42  #> 0.121000471 0.863193762 0.128354731 0.818093330 0.195316218 0.278814034  #>          43          44          45          46          47          48  #> 0.896063138 0.223229844 0.314659364 0.021844009 0.371216056 0.230792356  #>          49          50          51          52          53          54  #> 0.042199799 0.382128483 0.003916122 0.446093710 0.127376322 0.171424332  #>          55          56          57          58          59          60  #> 0.947231579 0.141533773 0.058387258 0.599378815 0.103085890 0.044587278  #>          61          62          63          64          65          66  #> 0.251120319 0.359430944 0.619407669 0.063573829 0.314640714 0.389339642  #>          67          68          69          70          71          72  #> 0.102639026 0.293931872 0.011789349 0.086786681 0.617302569 0.175776744  #>          73          74          75          76          77          78  #> 0.738859695 0.940225426 0.575078121 0.123277217 0.055146249 0.054102586  #>          79          80          81          82          83          84  #> 0.104150628 0.009218471 0.672565343 0.245960451 0.143659118 0.951709014  #>          85  #> 0.277252686"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ny_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of trees and aboveground biomass for Forest Inventory and Analysis plots in New York State — ny_trees","title":"Number of trees and aboveground biomass for Forest Inventory and Analysis plots in New York State — ny_trees","text":"data adapted Tidymodels \"multi-scale assessment\" lesson, available https://www.tidymodels.org/learn/work/multi-scale/. original data derived Forest Inventory Analysis program, implemented US Department Agriculture's Forest Service.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ny_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of trees and aboveground biomass for Forest Inventory and Analysis plots in New York State — ny_trees","text":"","code":"ny_trees"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ny_trees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of trees and aboveground biomass for Forest Inventory and Analysis plots in New York State — ny_trees","text":"sf object using EPSG 5070: NAD83 / Conus Albers (meters), 5,303 rows 5 columns: yr year measurements taken. plot unique identifier signifying plot measurements taken . n_trees number trees present plot. agb total aboveground biomass plot location, pounds. geometry centroid plot location.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ny_trees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Number of trees and aboveground biomass for Forest Inventory and Analysis plots in New York State — ny_trees","text":"Tidymodels team, \"Multi-scale Assessment\". Retrieved 30 November 2022. Available https://www.tidymodels.org/learn/work/multi-scale/","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"Predict ww_area_of_applicability","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"","code":"# S3 method for ww_area_of_applicability predict(object, new_data, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"object ww_area_of_applicability object. new_data data frame matrix new samples. ... used.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"tibble predictions, two columns: di, numeric, contains \"dissimilarity index\" point new_data, aoa, logical, contains whether row inside (TRUE) outside (FALSE) area applicability. Note function often called using raster::predict() terra::predict(), case aoa converted numeric implicitly; 1 values correspond cells \"inside\" area applicability 0 corresponds cells \"outside\" AOA. number rows tibble guaranteed number rows new_data. Rows NA predictor values NA  di aoa values.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"function computes distance indices new data whether \"inside\" area applicability.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/predict.ww_area_of_applicability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a ww_area_of_applicability — predict.ww_area_of_applicability","text":"","code":"library(vip) #>  #> Attaching package: ‘vip’ #> The following object is masked from ‘package:utils’: #>  #>     vi train <- gen_friedman(1000, seed = 101)  # ?vip::gen_friedman test <- train[701:1000, ] train <- train[1:700, ] pp <- stats::ppr(y ~ ., data = train, nterms = 11) importance <- vi_permute(   pp,   target = \"y\",   metric = \"rsquared\",   pred_wrapper = predict )  aoa <- ww_area_of_applicability(y ~ ., train, test, importance = importance) predict(aoa, test) #> # A tibble: 300 × 2 #>        di aoa   #>     <dbl> <lgl> #>  1 0.175  TRUE  #>  2 0.191  TRUE  #>  3 0.190  TRUE  #>  4 0.0802 TRUE  #>  5 0.141  TRUE  #>  6 0.287  TRUE  #>  7 0.178  TRUE  #>  8 0.205  TRUE  #>  9 0.134  TRUE  #> 10 0.177  TRUE  #> # … with 290 more rows"},{"path":"https://mikemahoney218.github.io/waywiser/reference/print.ww_area_of_applicability.html","id":null,"dir":"Reference","previous_headings":"","what":"Print number of predictors and area-of-applicability threshold — print.ww_area_of_applicability","title":"Print number of predictors and area-of-applicability threshold — print.ww_area_of_applicability","text":"Print number predictors area--applicability threshold","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/print.ww_area_of_applicability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print number of predictors and area-of-applicability threshold — print.ww_area_of_applicability","text":"","code":"# S3 method for ww_area_of_applicability print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/print.ww_area_of_applicability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print number of predictors and area-of-applicability threshold — print.ww_area_of_applicability","text":"x ww_area_of_applicability object. digits number digits print, used rounding AOA threshold. ... dots future extensions must empty.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/print.ww_area_of_applicability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print number of predictors and area-of-applicability threshold — print.ww_area_of_applicability","text":"","code":"library(vip) trn <- gen_friedman(500, seed = 101)  # ?vip::gen_friedman pp <- ppr(y ~ ., data = trn, nterms = 11) importance <- vi_permute(   pp,   target = \"y\",   metric = \"rsquared\",   pred_wrapper = predict )   ww_area_of_applicability(trn[2:11], importance = importance) #> # Predictors: #>    10 #> Area-of-applicability threshold: #>    0.3457622"},{"path":"https://mikemahoney218.github.io/waywiser/reference/waywiser-package.html","id":null,"dir":"Reference","previous_headings":"","what":"waywiser: Ergonomic Methods for Assessing Spatial Models — waywiser-package","title":"waywiser: Ergonomic Methods for Assessing Spatial Models — waywiser-package","text":"Assessing predictive models spatial data can challenging, models typically built extrapolating outside original region represented training data due potential spatially structured errors, \"hot spots\" higher expected error clustered geographically due spatial structure underlying data. Methods provided assessing models fit spatial data, including approaches measuring spatial structure model errors, assessing model predictions multiple spatial scales, evaluating predictions can made safely. Methods particularly useful models fit using 'tidymodels' framework. Methods include Moran's ('Moran' (1950) doi:10.2307/2332142 ), Geary's C ('Geary' (1954) doi:10.2307/2986645 ), Getis-Ord's G ('Ord' 'Getis' (1995) doi:10.1111/j.1538-4632.1995.tb00912.x ), agreement coefficients 'Ji' Gallo (2006) (doi: 10.14358/PERS.72.7.823 ), agreement metrics 'Willmott' (1981) (doi: 10.1080/02723646.1981.10642213 ) 'Willmott' 'et' 'al'. (2012) (doi: 10.1002/joc.2419 ), implementation area applicability methodology 'Meyer' 'Pebesma' (2021) (doi:10.1111/2041-210X.13650 ), implementation multi-scale assessment described 'Riemann' 'et' 'al'. (2010) (doi:10.1016/j.rse.2010.05.010 ).","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/waywiser-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"waywiser: Ergonomic Methods for Assessing Spatial Models — waywiser-package","text":"Maintainer: Michael Mahoney mike.mahoney.218@gmail.com (ORCID) contributors: Lucas Johnson lucas.k.johnson03@gmail.com (ORCID) [contributor] RStudio [copyright holder, funder]","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/worldclim_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated data based on WorldClim Bioclimatic variables — worldclim_simulation","title":"Simulated data based on WorldClim Bioclimatic variables — worldclim_simulation","text":"data adapted CAST vignette vignette(\"cast02-AOA-tutorial\", package = \"CAST\"). original data derived Worldclim global climate variables.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/worldclim_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated data based on WorldClim Bioclimatic variables — worldclim_simulation","text":"","code":"worldclim_simulation"},{"path":"https://mikemahoney218.github.io/waywiser/reference/worldclim_simulation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated data based on WorldClim Bioclimatic variables — worldclim_simulation","text":"sf object 10,000 rows 6 columns: bio2 Mean Diurnal Range (Mean monthly (max temp - min temp)) bio10 Mean Temperature Warmest Quarter bio13 Precipitation Wettest Month bio19 Precipitation Coldest Quarter geometry location sampled point. response virtual species distribution, generated using generateSpFromPCA() function virtualspecies package.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/worldclim_simulation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated data based on WorldClim Bioclimatic variables — worldclim_simulation","text":"https://www.worldclim.org","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement coefficients and related methods — ww_agreement_coefficient","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"functions calculate agreement coefficient mean product difference (MPD), well systematic unsystematic components, Ji Gallo (2006). Agreement coefficients provides useful measurement agreement two data sets bounded, symmetrical, can decomposed systematic unsystematic components; however, assumes linear relationship two data sets treats \"truth\" \"estimate\" equal quality, may useful metric scenarios.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"","code":"ww_agreement_coefficient(data, ...)  # S3 method for data.frame ww_agreement_coefficient(data, truth, estimate, na_action = na.fail, ...)  ww_agreement_coefficient_vec(truth, estimate, na_action = na.fail, ...)  ww_systematic_agreement_coefficient(data, ...)  # S3 method for data.frame ww_systematic_agreement_coefficient(   data,   truth,   estimate,   na_action = na.fail,   ... )  ww_systematic_agreement_coefficient_vec(   truth,   estimate,   na_action = na.fail,   ... )  ww_unsystematic_agreement_coefficient(data, ...)  # S3 method for data.frame ww_unsystematic_agreement_coefficient(   data,   truth,   estimate,   na_action = na.fail,   ... )  ww_unsystematic_agreement_coefficient_vec(   truth,   estimate,   na_action = na.fail,   ... )  ww_unsystematic_mpd(data, ...)  # S3 method for data.frame ww_unsystematic_mpd(data, truth, estimate, na_action = na.fail, ...)  ww_unsystematic_mpd_vec(truth, estimate, na_action = na.fail, ...)  ww_systematic_mpd(data, ...)  # S3 method for data.frame ww_systematic_mpd(data, truth, estimate, na_action = na.fail, ...)  ww_systematic_mpd_vec(truth, estimate, na_action = na.fail, ...)  ww_unsystematic_rmpd(data, ...)  # S3 method for data.frame ww_unsystematic_rmpd(data, truth, estimate, na_action = na.fail, ...)  ww_unsystematic_rmpd_vec(truth, estimate, na_action = na.fail, ...)  ww_systematic_rmpd(data, ...)  # S3 method for data.frame ww_systematic_rmpd(data, truth, estimate, na_action = na.fail, ...)  ww_systematic_rmpd_vec(truth, estimate, na_action = na.fail, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"data data.frame containing columns specified truth estimate arguments. ... currently used. truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"tibble columns .metric, .estimator, .estimate 1 row values. grouped data frames, number rows returned number groups. _vec() functions, single value (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"Agreement coefficient values range 0 1, 1 indicating perfect agreement. truth estimate must length. function explicitly spatial can applied data number dimensions coordinate reference system.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"Ji, L. Gallo, K. 2006. \"Agreement Coefficient Image Comparison.\" Photogrammetric Engineering & Remote Sensing 72(7), pp 823–833, doi: 10.14358/PERS.72.7.823.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_agreement_coefficient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Agreement coefficients and related methods — ww_agreement_coefficient","text":"","code":"# Calculated values match Ji and Gallo 2006: x <- c(6, 8, 9, 10, 11, 14) y <- c(2, 3, 5, 5, 6, 8)  ww_agreement_coefficient_vec(x, y) #> [1] 0.4745867 ww_systematic_agreement_coefficient_vec(x, y) #> [1] 0.4784812 ww_unsystematic_agreement_coefficient_vec(x, y) #> [1] 0.9961054 ww_systematic_mpd_vec(x, y) #> [1] 23.65667 ww_unsystematic_mpd_vec(x, y) #> [1] 0.1766615 ww_systematic_rmpd_vec(x, y) #> [1] 4.863812 ww_unsystematic_rmpd_vec(x, y) #> [1] 0.4203112  example_df <- data.frame(x = x, y = y) ww_agreement_coefficient(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric               .estimator .estimate #>   <chr>                 <chr>          <dbl> #> 1 agreement_coefficient standard       0.475 ww_systematic_agreement_coefficient(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric                          .estimator .estimate #>   <chr>                            <chr>          <dbl> #> 1 systematic_agreement_coefficient standard       0.478 ww_unsystematic_agreement_coefficient(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric                            .estimator .estimate #>   <chr>                              <chr>          <dbl> #> 1 unsystematic_agreement_coefficient standard       0.996 ww_systematic_mpd(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 systematic_mpd standard        23.7 ww_unsystematic_mpd(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric          .estimator .estimate #>   <chr>            <chr>          <dbl> #> 1 unsystematic_mpd standard       0.177 ww_systematic_rmpd(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric         .estimator .estimate #>   <chr>           <chr>          <dbl> #> 1 systematic_rmpd standard        4.86 ww_unsystematic_rmpd(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric           .estimator .estimate #>   <chr>             <chr>          <dbl> #> 1 unsystematic_rmpd standard       0.420"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the area of applicability — ww_area_of_applicability","title":"Find the area of applicability — ww_area_of_applicability","text":"function calculates \"area applicability\" model, introduced Meyer Pebesma (2021). initial paper introducing method focused spatial models, nothing inherently spatial method; can used type data (, care spatial arrangement data, can used 2D 3D spatial data, geographic projected CRS).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the area of applicability — ww_area_of_applicability","text":"","code":"ww_area_of_applicability(x, ...)  # S3 method for data.frame ww_area_of_applicability(   x,   testing = NULL,   importance,   ...,   na_action = na.fail )  # S3 method for matrix ww_area_of_applicability(   x,   testing = NULL,   importance,   ...,   na_action = na.fail )  # S3 method for formula ww_area_of_applicability(   x,   data,   testing = NULL,   importance,   ...,   na_action = na.fail )  # S3 method for recipe ww_area_of_applicability(   x,   data,   testing = NULL,   importance,   ...,   na_action = na.fail )  # S3 method for rset ww_area_of_applicability(x, y = NULL, importance, ..., na_action = na.fail)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the area of applicability — ww_area_of_applicability","text":"x Either data frame, matrix, formula (specifying predictor terms right-hand side), recipe (recipes::recipe(), rset object, produced resampling functions rsample spatialsample. x recipe, one used pre-process data used model. recipe used build area applicability match one used build model, returned area applicability correct. ... currently used. testing data frame matrix containing data used validate model. data used calculate model accuracy metrics. argument NULL, function use training data (x data) calculate within-sample distances. may result area applicability threshold set high, result many points classed \"inside\" area applicability. importance Either: data.frame two columns: term, containing names variable training testing data, estimate, containing (raw scaled) feature importance variable. object class vi least two columns, Variable Importance. variables training data (x data, depending context) must matching importance estimate, terms importance estimates must training data. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action. data data frame representing \"training\" data, using formula recipe methods. y Optional: recipe (recipes::recipe()) formula. y recipe, one used pre-process data used model. recipe used build area applicability match one used build model, returned area applicability correct.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the area of applicability — ww_area_of_applicability","text":"ww_area_of_applicability object, can used predict() calculate distance new data original training data, determine new data within model's area applicability.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find the area of applicability — ww_area_of_applicability","text":"Predictions made points \"inside\" area applicability accurate predictions made data provided testing. means generally testing final hold-set predictions points inside area applicability accurately described reported model metrics. passing rset object x, predictions made points \"inside\" area applicability instead accurate predictions made assessment sets cross-validation. method assumes model fit using dummy variables place non-numeric predictor, one importance score per dummy variable. non-numeric predictors cause function fail.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"differences-from-cast","dir":"Reference","previous_headings":"","what":"Differences from CAST","title":"Find the area of applicability — ww_area_of_applicability","text":"implementation differs Meyer Pebesma (2021) (therefore CAST) using cross-validated data order minimize data leakage. Namely, order calculate dissimilarity index \\(DI_{k}\\), CAST: Rescales data used cross validation , lumping assessment folds analysis data. Calculates single \\(\\bar{d}\\) mean distance points rescaled data set, including points assessment fold. point \\(k\\) used assessment fold, calculates \\(d_{k}\\) minimum distance \\(k\\) point corresponding analysis fold. Calculates \\(DI_{k}\\) dividing \\(d_{k}\\) \\(\\bar{d}\\) (partially calculated distance \\(k\\) rest rescaled data). assessment data used calculate constants rescaling analysis data \\(\\bar{d}\\), assessment data may appear \"similar\" analysis data calculating \\(DI_{k}\\). , waywiser treats fold rset independently: analysis set rescaled independently. Separate \\(\\bar{d}\\) calculated fold, mean distance points analysis set fold. Identically CAST, \\(d_{k}\\) minimum distance point \\(k\\) assessment fold point corresponding analysis fold. \\(DI_{k}\\) found dividing \\(d_{k}\\) \\(\\bar{d}\\), calculated independently k. Predictions made using full training data set, rescaled (way CAST), mean \\(\\bar{d}\\) across folds, assumption \"final\" model use retrained using entire data set. practice, means waywiser produces slightly higher \\(\\bar{d}\\) values CAST slightly higher area applicability threshold CAST using rset objects.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the area of applicability — ww_area_of_applicability","text":"H. Meyer E. Pebesma. 2021. \"Predicting unknown space? Estimating area applicability spatial prediction models,\" Methods Ecology Evolution 12(9), pp 1620 - 1633, doi: 10.1111/2041-210X.13650.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_area_of_applicability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the area of applicability — ww_area_of_applicability","text":"","code":"train <- vip::gen_friedman(1000, seed = 101)  # ?vip::gen_friedman test <- train[701:1000, ] train <- train[1:700, ] pp <- stats::ppr(y ~ ., data = train, nterms = 11) importance <- vip::vi_permute(   pp,   target = \"y\",   metric = \"rsquared\",   pred_wrapper = predict )  aoa <- ww_area_of_applicability(y ~ ., train, test, importance = importance) predict(aoa, test) #> # A tibble: 300 × 2 #>        di aoa   #>     <dbl> <lgl> #>  1 0.175  TRUE  #>  2 0.191  TRUE  #>  3 0.190  TRUE  #>  4 0.0802 TRUE  #>  5 0.141  TRUE  #>  6 0.287  TRUE  #>  7 0.178  TRUE  #>  8 0.205  TRUE  #>  9 0.134  TRUE  #> 10 0.177  TRUE  #> # … with 290 more rows  # Equivalent methods for calculating AOA: ww_area_of_applicability(train[2:11], test[2:11], importance) #> # Predictors: #>    10 #> Area-of-applicability threshold: #>    0.3080491 ww_area_of_applicability(   as.matrix(train[2:11]),   as.matrix(test[2:11]),   importance ) #> # Predictors: #>    10 #> Area-of-applicability threshold: #>    0.3080491"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Make 'nb' objects from sf objects — ww_build_neighbors","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"","code":"ww_build_neighbors(data, nb = NULL, ..., call = rlang::caller_env())"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"data sf object (class \"sf\" \"sfc\"). nb object class \"nb\" (case returned unchanged), function create object class \"nb\" data ..., NULL. See details. ... Arguments passed neighbor-creating function. call execution environment currently running function, e.g. call = caller_env(). corresponding function call retrieved mentioned error messages source error. need supply call throwing condition helper function relevant mention message. Can also NULL defused function call respectively display call hard-code code display. information error calls, see Including function calls error messages.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"object class \"nb\".","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"nb = NULL, method used create neighbors data dependent geometry type data : nb = NULL data point geometry (classes \"sfc_POINT\" \"sfc_MULTIPOINT\") \"nb\" object created using ww_make_point_neighbors(). nb = NULL data polygon geometry (classes \"sfc_POLYGON\" \"sfc_MULTIPOLYGON\") \"nb\" object created using ww_make_polygon_neighbors(). nb = NULL data geometry type, \"nb\" object created using centroids data points, warning.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make 'nb' objects from sf objects — ww_build_neighbors","text":"","code":"ww_build_neighbors(guerry) #> Neighbour list object: #> Number of regions: 85  #> Number of nonzero links: 420  #> Percentage nonzero weights: 5.813149  #> Average number of links: 4.941176"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Build ","title":"Build ","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build ","text":"","code":"ww_build_weights(x, wt = NULL, include_self = FALSE, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build ","text":"x Either sf object \"nb\" neighbors list object. sf object, converted neighbors list via ww_build_neighbors(). wt Either \"listw\" object (returned unchanged), function creating \"listw\" object x, NULL, case weights constructed via spdep::nb2listw(). include_self Include region list neighbors? ... Arguments passed weight constructing function.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build ","text":"listw object.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_build_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build ","text":"","code":"ww_build_weights(guerry) #> Characteristics of weights list object: #> Neighbour list object: #> Number of regions: 85  #> Number of nonzero links: 420  #> Percentage nonzero weights: 5.813149  #> Average number of links: 4.941176  #>  #> Weights style: W  #> Weights constants summary: #>    n   nn S0      S1       S2 #> W 85 7225 85 37.2761 347.6683"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Make 'nb' objects from point geometries — ww_make_point_neighbors","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"function uses spdep::knearneigh() spdep::knn2nb() create \"nb\" neighbors list.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"","code":"ww_make_point_neighbors(data, k = 1, sym = FALSE, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"data sfc_POINT sfc_MULTIPOINT object. k many nearest neighbors use spdep::knearneigh(). sym Force output neighbors list (spdep::knn2nb()) symmetry. ... arguments passed spdep::knearneigh().","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"object class \"nb\"","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_point_neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make 'nb' objects from point geometries — ww_make_point_neighbors","text":"","code":"ww_make_point_neighbors(ny_trees) #> Neighbour list object: #> Number of regions: 5303  #> Number of nonzero links: 5303  #> Percentage nonzero weights: 0.01885725  #> Average number of links: 1  #> Non-symmetric neighbours list"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":null,"dir":"Reference","previous_headings":"","what":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"function extremely thin wrapper around spdep::poly2nb(), renamed use waywiser \"ww\" prefix.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"","code":"ww_make_polygon_neighbors(data, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"data sfc_POLYGON sfc_MULTIPOLYGON object. ... Additional arguments passed spdep::poly2nb().","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"object class \"nb\"","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"functions can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_make_polygon_neighbors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make 'nb' objects from polygon geometries — ww_make_polygon_neighbors","text":"","code":"ww_make_polygon_neighbors(guerry) #> Neighbour list object: #> Number of regions: 85  #> Number of nonzero links: 420  #> Percentage nonzero weights: 5.813149  #> Average number of links: 4.941176"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"Evaluate metrics multiple scales aggregation","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"","code":"ww_multi_scale(   data,   truth,   estimate,   metrics = list(yardstick::rmse, yardstick::mae),   grids = NULL,   ...,   na_action = na.fail,   aggregation_function = mean,   autoexpand_grid = TRUE )"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"data point geometry sf object containing columns specified truth estimate arguments. truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. metrics Either yardstick::metric_set() object, list functions used construct yardstick::metric_set() object specifying performance metrics evaluate scale. grids Optionally, list pre-computed sf sfc objects specifying polygon boundaries use assessments. ... Arguments passed sf::st_make_grid(). almost certainly provide arguments lists. instance, passing n = list(c(1, 2)) create single 1x2 grid; passing n = c(1, 2) create 1x1 grid 2x2 grid. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action. aggregation_function function use aggregate predictions true values various scales, default mean(). can pass function takes single vector returns scalar. autoexpand_grid Boolean: data geographic coordinates grids provided, grids generated sf::st_make_grid() may contain observations. TRUE, function automatically expand generated grids tiny factor attempt capture observations.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"tibble six columns: .metric, name metric row describes; .estimator, name estimator used, .estimate, output metric function; .grid_args, arguments passed sf::st_make_grid() via ... (), .grid, containing grids used aggregate predictions, .notes, indicate observations used given assessment.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"grid blocks can controlled passing arguments sf::st_make_grid() via .... particularly useful arguments include: cellsize: Target cellsize, expressed \"diameter\" (shortest straight-line distance opposing sides; two times apothem) block, map units. n: number grid blocks x y direction (columns, rows). square: logical value indicating whether create square (TRUE) hexagonal (FALSE) cells. cellsize n provided, number blocks requested n sizes specified cellsize returned, likely lining bounding box data. cellsize provided, function return many blocks size cellsize fit inside bounding box data. n provided, cellsize automatically adjusted create requested number cells. function can used geographic projected coordinate reference systems expect 2D data.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"Riemann, R., Wilson, B. T., Lister, ., Parks, S. (2010). \"effective assessment protocol continuous geospatial datasets forest characteristics using USFS Forest Inventory Analysis (FIA) data.\" Remote Sensing Environment 114(10), pp 2337-2352, doi: 10.1016/j.rse.2010.05.010 .","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_multi_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate metrics at multiple scales of aggregation — ww_multi_scale","text":"","code":"data(ames, package = \"modeldata\") ames_sf <- sf::st_as_sf(ames, coords = c(\"Longitude\", \"Latitude\"), crs = 4326) ames_model <- lm(Sale_Price ~ Lot_Area, data = ames_sf) ames_sf$predictions <- predict(ames_model, ames_sf)  ww_multi_scale(   ames_sf,   Sale_Price,   predictions,   n = list(     c(10, 10),     c(1, 1)   ),   square = FALSE ) #> # A tibble: 4 × 6 #>   .metric .estimator .estimate .grid_args       .grid          .notes           #>   <chr>   <chr>          <dbl> <list>           <list>         <list>           #> 1 rmse    standard      82076. <tibble [1 × 2]> <sf [103 × 3]> <tibble [0 × 2]> #> 2 mae     standard      60467. <tibble [1 × 2]> <sf [103 × 3]> <tibble [0 × 2]> #> 3 rmse    standard      27862. <tibble [1 × 2]> <sf [5 × 3]>   <tibble [0 × 2]> #> 4 mae     standard      23267. <tibble [1 × 2]> <sf [5 × 3]>   <tibble [0 × 2]>  # or, mostly equivalently # (there will be a slight difference due to `autoexpand_grid = TRUE`) grids <- list(   sf::st_make_grid(ames_sf, n = c(10, 10), square = FALSE),   sf::st_make_grid(ames_sf, n = c(1, 1), square = FALSE) ) ww_multi_scale(ames_sf, Sale_Price, predictions, grids = grids) #> # A tibble: 4 × 6 #>   .metric .estimator .estimate .grid_args       .grid          .notes           #>   <chr>   <chr>          <dbl> <list>           <list>         <list>           #> 1 rmse    standard      77853. <tibble [0 × 0]> <sf [103 × 3]> <tibble [0 × 2]> #> 2 mae     standard      56796. <tibble [0 × 0]> <sf [103 × 3]> <tibble [0 × 2]> #> 3 rmse    standard      27789. <tibble [0 × 0]> <sf [5 × 3]>   <tibble [0 × 2]> #> 4 mae     standard      23173. <tibble [0 × 0]> <sf [5 × 3]>   <tibble [0 × 2]>"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":null,"dir":"Reference","previous_headings":"","what":"Willmott's d and related values — ww_willmott_d","title":"Willmott's d and related values — ww_willmott_d","text":"functions calculate Willmott's d value, proposed replacement R2 better differentiates types magnitudes possible covariations. Additional functions calculate systematic unsystematic components MSE RMSE; sum systematic unsystematic components MSE equal total MSE (though true RMSE).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Willmott's d and related values — ww_willmott_d","text":"","code":"ww_willmott_d(data, ...)  # S3 method for data.frame ww_willmott_d(data, truth, estimate, na_action = na.fail, ...)  ww_willmott_d_vec(truth, estimate, na_action = na.fail, ...)  ww_willmott_dr(data, ...)  # S3 method for data.frame ww_willmott_dr(data, truth, estimate, na_action = na.fail, ...)  ww_willmott_dr_vec(truth, estimate, na_action = na.fail, ...)  ww_systematic_mse(data, ...)  # S3 method for data.frame ww_systematic_mse(data, truth, estimate, na_action = na.fail, ...)  ww_systematic_mse_vec(truth, estimate, na_action = na.fail, ...)  ww_unsystematic_mse(data, ...)  # S3 method for data.frame ww_unsystematic_mse(data, truth, estimate, na_action = na.fail, ...)  ww_unsystematic_mse_vec(truth, estimate, na_action = na.fail, ...)  ww_systematic_rmse(data, ...)  # S3 method for data.frame ww_systematic_rmse(data, truth, estimate, na_action = na.fail, ...)  ww_systematic_rmse_vec(truth, estimate, na_action = na.fail, ...)  ww_unsystematic_rmse(data, ...)  # S3 method for data.frame ww_unsystematic_rmse(data, truth, estimate, na_action = na.fail, ...)  ww_unsystematic_rmse_vec(truth, estimate, na_action = na.fail, ...)"},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Willmott's d and related values — ww_willmott_d","text":"data data.frame containing columns specified truth estimate arguments. ... currently used. truth column identifier true results (numeric). unquoted column name although argument passed expression supports quasiquotation (can unquote column names). _vec() functions, numeric vector. estimate column identifier predicted results (also numeric). truth can specified different ways primary method use unquoted variable name. _vec() functions, numeric vector. na_action function indicates happen data contain NAs. default na.fail; may wish set na.omit functions \"zoo\" package. function ignores value options(\"na.action\") order make cross-computer (cross-session) results stable. argument must length 1; pass multiple functions na_action.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Willmott's d and related values — ww_willmott_d","text":"tibble columns .metric, .estimator, .estimate 1 row values. grouped data frames, number rows returned number groups. _vec() functions, single value (NA).","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Willmott's d and related values — ww_willmott_d","text":"Values d range 0 1, 1 indicating perfect agreement. Values dr range -1 1, 1 similarly indicating perfect agreement. Values RMSE units truth estimate, values MSE squared units. truth estimate must length. function explicitly spatial can applied data number dimensions coordinate reference system.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Willmott's d and related values — ww_willmott_d","text":"Willmott, C. J. 1981. \"Validation Models\". Physical Geography 2(2), pp 184-194, doi: 10.1080/02723646.1981.10642213. Willmott, C. J. 1982. \"Comments Evaluation Model Performance\". Bulletin American Meteorological Society 63(11), pp 1309-1313, doi: 10.1175/1520-0477(1982)063<1309:SCOTEO>2.0.CO;2. Willmott, C. J., Robeson, S. M., Matsuura, K. \"refined index model performance\". International Journal Climatology 32, pp 2088-2094, doi: 10.1002/joc.2419.","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/waywiser/reference/ww_willmott_d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Willmott's d and related values — ww_willmott_d","text":"","code":"x <- c(6, 8, 9, 10, 11, 14) y <- c(2, 3, 5, 5, 6, 8)  ww_willmott_d_vec(x, y) #> [1] 0.5421558 ww_willmott_dr_vec(x, y) #> [1] -0.1724138 ww_systematic_mse_vec(x, y) #> [1] 0.2238443 ww_unsystematic_mse_vec(x, y) #> [1] 23.60949 ww_systematic_rmse_vec(x, y) #> [1] 0.4731218 ww_unsystematic_rmse_vec(x, y) #> [1] 4.85896  example_df <- data.frame(x = x, y = y) ww_willmott_d(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric    .estimator .estimate #>   <chr>      <chr>          <dbl> #> 1 willmott_d standard       0.542 ww_willmott_dr(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric     .estimator .estimate #>   <chr>       <chr>          <dbl> #> 1 willmott_dr standard      -0.172 ww_systematic_mse(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric        .estimator .estimate #>   <chr>          <chr>          <dbl> #> 1 systematic_mse standard       0.224 ww_unsystematic_mse(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric          .estimator .estimate #>   <chr>            <chr>          <dbl> #> 1 unsystematic_mse standard        23.6 ww_systematic_rmse(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric         .estimator .estimate #>   <chr>           <chr>          <dbl> #> 1 systematic_rmse standard       0.473 ww_unsystematic_rmse(example_df, x, y) #> # A tibble: 1 × 3 #>   .metric           .estimator .estimate #>   <chr>             <chr>          <dbl> #> 1 unsystematic_rmse standard        4.86"},{"path":"https://mikemahoney218.github.io/waywiser/news/index.html","id":"waywiser-development-version","dir":"Changelog","previous_headings":"","what":"waywiser (development version)","title":"waywiser (development version)","text":"Yardstick metrics longer include geometry columns returns. Removed combination functions – ww_global_geary, ww_global_moran, ww_local_geary, ww_local_moran, ww_local_getis_ord. Use metric_set() combine functions instead. Renamed ww_local_getis_ord_pvalue_vec() variants ww_local_getis_ord_g_pvalue_vec(); change allows internal functions work properly, makes easier output indicate p-value associated g g* value. Added functions (primarily ww_multi_scale()) vignette multi-scale assessment model predictions. Rewrote README moved old content new vignette assessing spatial dependency model residuals. Added functions calculate metrics Ji Gallo (2006) Willmott (1981, 1982, 2012): ww_agreement_coefficient(), ww_systematic_agreement_coefficient(), ww_unsystematic_agreement_coefficient(), ww_unsystematic_mpd(),, ww_systematic_mpd(), ww_unsystematic_rmpd(), ww_systematic_rmpd(), ww_willmott_d(), ww_willmott_dr(), ww_systematic_mse(), ww_unsystematic_mse(), ww_systematic_rmse(), ww_unsystematic_rmse(). Added dependency FNN. Changed call ww_area_of_applicability() use FNN nearest neighbors, rather fields. sped prediction lot.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/news/index.html","id":"waywiser-020","dir":"Changelog","previous_headings":"","what":"waywiser 0.2.0","title":"waywiser 0.2.0","text":"CRAN release: 2022-10-23 Added functions calculating area applicability model.","code":""},{"path":"https://mikemahoney218.github.io/waywiser/news/index.html","id":"waywiser-010","dir":"Changelog","previous_headings":"","what":"waywiser 0.1.0","title":"waywiser 0.1.0","text":"CRAN release: 2022-08-10 Added functions automatically constructing nb listw objects Added functions global local Geary’s C values. Added functions local Getis-Ord G G* values. Added functions global local Moran’s values. Added NEWS.md file track changes package.","code":""}]
